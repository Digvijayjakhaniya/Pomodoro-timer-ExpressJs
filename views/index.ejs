<%- include('./includes/header.ejs') %>

<div class="container text-center mt-5 mb-5">
    <a href="/tasks/create" class="btn btn-primary float-end">Add Task</a>
    <h1 class="mb-4">Pomodoro Timer</h1>
    <div id="timer" class="display-4 mb-4">
        <span id="minutes">25</span>:<span id="seconds">00</span>
    </div>
    <a id="start-btn" class="btn btn-success btn-lg <% if (Current_task.length == 0 ) { %> disabled <% } %> " onclick="startTimer()">Start</a>
    <button id="stop-btn" class="btn btn-danger btn-lg disabled" onclick="stopTimer()">Stop</button>
    <h4 id="message" class="mt-3" style="color: red;"></h4>

    <% if(Current_task.length >= 1 ){ %>
        <h3 class="mt-5 alert alert-success">Current Task</h3>
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">Task Name</th>
                </tr>
            </thead>
            <tbody>
                <% Current_task.forEach((item) => { %>
                    <tr>
                        <td><%= item.task_name %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    <% } %>

    <% if(Pending_task.length >= 1 ){ %>
        <h3 class="mt-5 alert alert-danger">Pending Task</h3>
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">No</th>
                    <th scope="col">Task Name</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                <% var i = 1 %>
                <% Pending_task.forEach((item) => { %>
                    <tr>
                        <td><%= i++ %></td>
                        <td><%= item.task_name %></td>
                        <td>
                            <a class="btn btn-secondary <% if (Current_task.length >= 1) { %> disabled <% } %> " href="/select/<%= item._id %>">Select</a>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    <% } %>

    <% if(Complete_task.length >= 1 ){ %>
        <h3 class="mt-5 alert alert-success">Complete Task</h3>
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">No</th>
                    <th scope="col">Task Name</th>
                </tr>
            </thead>
            <tbody>
                <% var i = 1 %>
                <% Complete_task.forEach((item) => { %>
                    <tr>
                        <td><%= i++ %></td>
                        <td><%= item.task_name %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    <% } %>
</div>

<script>
    let timeRemaining = 25 * 60;
    let timerInterval;
    let isBreakTime = false;
    let timerRunning = false;

    const minutesDisplay = document.getElementById('minutes');
    const secondsDisplay = document.getElementById('seconds');

    function startTimer() {

        document.getElementById('start-btn').classList.add('disabled');
        document.getElementById('stop-btn').classList.remove('disabled');

        document.getElementById('message').innerText = '';

        if (timerRunning) return;

        timerRunning = true;

        clearInterval(timerInterval);

        if (!isBreakTime) {
            timeRemaining = timeRemaining || 25 * 60;
        } else {
            document.getElementById('message').innerText = 'Work session complete! Taking a break...';
            startBreakTimer();
            return;
        }

        timerInterval = setInterval(() => {
            if (timeRemaining <= 0) {
                clearInterval(timerInterval);
                timerRunning = false;
                document.getElementById('message').innerText = 'Work session complete! Taking a break...';
                isBreakTime = true;
                timeRemaining = 300;
                startBreakTimer();
                return;
            }

            updateTimerDisplay();
            timeRemaining--;
        }, 1000);
    }

    function startBreakTimer() {
        clearInterval(timerInterval);

        document.getElementById('message').innerText = 'Work session complete! Taking a break...';

        timerInterval = setInterval(() => {
            if (timeRemaining <= 0) {
                clearInterval(timerInterval);
                document.getElementById('message').innerText = 'Break is over! You can start a new task in 5 seconds...';

                setTimeout(() => {
                    updateTaskStatus();
                    resetTimer();
                }, 5000);
                return;
            }

            updateTimerDisplay();
            timeRemaining--;
        }, 1000);
    }

    function stopTimer() {
        document.getElementById('stop-btn').classList.add('disabled');
        document.getElementById('start-btn').classList.remove('disabled');

        clearInterval(timerInterval); 
        timerRunning = false;
        document.getElementById('message').innerText = 'Timer stopped!';
    }

    function updateTimerDisplay() {
        const minutes = Math.floor(timeRemaining / 60);
        const seconds = timeRemaining % 60;

        minutesDisplay.innerText = minutes < 10 ? '0' + minutes : minutes;
        secondsDisplay.innerText = seconds < 10 ? '0' + seconds : seconds;
    }

    function resetTimer() {
        timeRemaining = 25 * 60;
        isBreakTime = false;
        timerRunning = false;
        updateTimerDisplay();
    }
    
    function updateTaskStatus() {
        fetch('/update-task-status', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ status: 'Completed' })
        }).then(location.reload());
    }
</script>


<%- include('./includes/footer.ejs') %>
